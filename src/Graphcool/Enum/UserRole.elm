-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Graphcool.Enum.UserRole exposing (UserRole(..), decoder, list, toString)

import Json.Decode as Decode exposing (Decoder)


type UserRole
    = Admin
    | User


list : List UserRole
list =
    [ Admin, User ]


decoder : Decoder UserRole
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "ADMIN" ->
                        Decode.succeed Admin

                    "USER" ->
                        Decode.succeed User

                    _ ->
                        Decode.fail ("Invalid UserRole type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : UserRole -> String
toString enum =
    case enum of
        Admin ->
            "ADMIN"

        User ->
            "USER"
